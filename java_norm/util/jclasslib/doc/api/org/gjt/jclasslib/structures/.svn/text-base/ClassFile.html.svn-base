<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.4.2_05) on Fri Jan 14 16:08:53 CET 2005 -->
<TITLE>
ClassFile (jclasslib API documentation)
</TITLE>

<META NAME="keywords" CONTENT="org.gjt.jclasslib.structures.ClassFile class">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../../doc.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    parent.document.title="ClassFile (jclasslib API documentation)";
}
</SCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<b><a target='_blank' href='http://www.ej-technologies.com' >ej-technologies</a></b></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/gjt/jclasslib/structures/AttributeInfo.html" title="class in org.gjt.jclasslib.structures"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/gjt/jclasslib/structures/ClassMember.html" title="class in org.gjt.jclasslib.structures"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ClassFile.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
org.gjt.jclasslib.structures</FONT>
<BR>
Class ClassFile</H2>
<PRE>
<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../../resources/inherit.gif" ALT="extended by"><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html" title="class in org.gjt.jclasslib.structures">org.gjt.jclasslib.structures.AbstractStructure</A>
      <IMG SRC="../../../../resources/inherit.gif" ALT="extended by"><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html" title="class in org.gjt.jclasslib.structures">org.gjt.jclasslib.structures.AbstractStructureWithAttributes</A>
          <IMG SRC="../../../../resources/inherit.gif" ALT="extended by"><B>org.gjt.jclasslib.structures.ClassFile</B>
</PRE>
<HR>
<DL>
<DT>public class <B>ClassFile</B><DT>extends <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html" title="class in org.gjt.jclasslib.structures">AbstractStructureWithAttributes</A></DL>

<P>
The class file structure in which all other structures are hooked up.
<P>

<P>
<DL>
<DT><B>Version:</B></DT>
  <DD>$Revision: 1.10 $ $Date: 2004/12/28 13:04:32 $</DD>
<DT><B>Author:</B></DT>
  <DD><a href="mailto:jclasslib@ej-technologies.com">Ingo Kegel</a>, <a href="mailto:vitor.carreira@gmail.com">Vitor Carreira</a></DD>
</DL>
<HR>

<P>
<!-- ======== NESTED CLASS SUMMARY ======== -->


<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Field Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#SYSTEM_PROPERTY_SKIP_CONSTANT_POOL">SYSTEM_PROPERTY_SKIP_CONSTANT_POOL</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set this JVM System property to true to skip reading of constant pool
 entries.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.gjt.jclasslib.structures.AbstractStructureWithAttributes"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class org.gjt.jclasslib.structures.<A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html" title="class in org.gjt.jclasslib.structures">AbstractStructureWithAttributes</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html#attributes">attributes</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="fields_inherited_from_class_org.gjt.jclasslib.structures.AbstractStructure"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Fields inherited from class org.gjt.jclasslib.structures.<A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html" title="class in org.gjt.jclasslib.structures">AbstractStructure</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#classFile">classFile</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#debug">debug</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#SYSTEM_PROPERTY_DEBUG">SYSTEM_PROPERTY_DEBUG</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#ClassFile()">ClassFile</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=2><FONT SIZE="+2">
<B>Method Summary</B></FONT></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#enlargeConstantPool(org.gjt.jclasslib.structures.CPInfo[])">enlargeConstantPool</A></B>(<A HREF="../../../../org/gjt/jclasslib/structures/CPInfo.html" title="class in org.gjt.jclasslib.structures">CPInfo</A>[]&nbsp;enlargedConstantPool)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the array with all constant pool entries where the new array
 of constant pool entries starts with the old constant pool.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getAccessFlags()">getAccessFlags</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the access flags of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getAccessFlagsVerbose()">getAccessFlagsVerbose</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the verbose description of the access flags of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/gjt/jclasslib/structures/CPInfo.html" title="class in org.gjt.jclasslib.structures">CPInfo</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getConstantPool()">getConstantPool</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the array with all constant pool entries.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/gjt/jclasslib/structures/CPInfo.html" title="class in org.gjt.jclasslib.structures">CPInfo</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getConstantPoolEntry(int, java.lang.Class)">getConstantPoolEntry</A></B>(int&nbsp;index,
                     <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Class.html" title="class or interface in java.lang">Class</A>&nbsp;entryClass)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the constant pool entry at the specified index and cast it to a specified class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getConstantPoolEntryName(int)">getConstantPoolEntryName</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get an approximate verbose description of the content of the constant pool entry
 at the specified index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getConstantPoolIndex(org.gjt.jclasslib.structures.CPInfo)">getConstantPoolIndex</A></B>(<A HREF="../../../../org/gjt/jclasslib/structures/CPInfo.html" title="class in org.gjt.jclasslib.structures">CPInfo</A>&nbsp;cpInfo)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the index of an equivalent constant pool entry.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/gjt/jclasslib/structures/constants/ConstantUtf8Info.html" title="class in org.gjt.jclasslib.structures.constants">ConstantUtf8Info</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getConstantPoolUtf8Entry(int)">getConstantPoolUtf8Entry</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the <tt>ConstantUtf8Info</tt> constant pool entry at the specified index.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/gjt/jclasslib/structures/FieldInfo.html" title="class in org.gjt.jclasslib.structures">FieldInfo</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getField(java.lang.String, java.lang.String)">getField</A></B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;name,
         <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;descriptor)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the <tt>FieldInfo</tt> for given field name and signature.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getFieldIndex(java.lang.String, java.lang.String)">getFieldIndex</A></B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;name,
              <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;descriptor)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the index of a field for given field name and signature.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/gjt/jclasslib/structures/FieldInfo.html" title="class in org.gjt.jclasslib.structures">FieldInfo</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getFields()">getFields</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the array with the <tt>FieldInfo</tt> structures for the fields of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getFormattedAccessFlags()">getFormattedAccessFlags</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the the access flags of this class as a hex string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getInterfaces()">getInterfaces</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the array with the constant pool entries of all interfaces.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getMajorVersion()">getMajorVersion</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the major version of the class file format.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/gjt/jclasslib/structures/MethodInfo.html" title="class in org.gjt.jclasslib.structures">MethodInfo</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getMethod(java.lang.String, java.lang.String)">getMethod</A></B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;name,
          <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;descriptor)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the <tt>MethodInfo</tt> for given method name and signature.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getMethodIndex(java.lang.String, java.lang.String)">getMethodIndex</A></B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;name,
               <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;descriptor)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the index of a method for given method name and signature.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../../../../org/gjt/jclasslib/structures/MethodInfo.html" title="class in org.gjt.jclasslib.structures">MethodInfo</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getMethods()">getMethods</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the array with the <tt>MethodInfo</tt> structures for the methods of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getMinorVersion()">getMinorVersion</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the minor version of the class file format.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getSuperClass()">getSuperClass</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the constant pool index of the super class of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getSuperClassName()">getSuperClassName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the name of the super class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getThisClass()">getThisClass</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the constant pool index of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#getThisClassName()">getThisClassName</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Get the name of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#printAccessFlagsVerbose(int)">printAccessFlagsVerbose</A></B>(int&nbsp;accessFlags)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Utility method for derived structures.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#read(java.io.DataInput)">read</A></B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/DataInput.html" title="class or interface in java.io">DataInput</A>&nbsp;in)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Read this structure from the given <tt>DataInput</tt>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#readAttributes(java.io.DataInput)">readAttributes</A></B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/DataInput.html" title="class or interface in java.io">DataInput</A>&nbsp;in)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Read the attributes of this structure from the given <tt>DataInput</tt>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#registerConstantPoolEntry(int)">registerConstantPoolEntry</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register the constant pool entry at a given index, so that it can
 be found through the <tt>getConstantPoolIndex</tt> method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#setAccessFlags(int)">setAccessFlags</A></B>(int&nbsp;accessFlags)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the access flags of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#setConstantPool(org.gjt.jclasslib.structures.CPInfo[])">setConstantPool</A></B>(<A HREF="../../../../org/gjt/jclasslib/structures/CPInfo.html" title="class in org.gjt.jclasslib.structures">CPInfo</A>[]&nbsp;constantPool)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the array with all constant pool entries.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#setFields(org.gjt.jclasslib.structures.FieldInfo[])">setFields</A></B>(<A HREF="../../../../org/gjt/jclasslib/structures/FieldInfo.html" title="class in org.gjt.jclasslib.structures">FieldInfo</A>[]&nbsp;fields)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the array with the <tt>FieldInfo</tt> structures for the fields of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#setInterfaces(int[])">setInterfaces</A></B>(int[]&nbsp;interfaces)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the array with the constant pool entries of all interfaces.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#setMajorVersion(int)">setMajorVersion</A></B>(int&nbsp;majorVersion)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the major version of the class file format.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#setMethods(org.gjt.jclasslib.structures.MethodInfo[])">setMethods</A></B>(<A HREF="../../../../org/gjt/jclasslib/structures/MethodInfo.html" title="class in org.gjt.jclasslib.structures">MethodInfo</A>[]&nbsp;methods)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the array with the <tt>MethodInfo</tt> structures for the methods of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#setMinorVersion(int)">setMinorVersion</A></B>(int&nbsp;minorVersion)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the minor version of the class file format.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#setSuperClass(int)">setSuperClass</A></B>(int&nbsp;superClass)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the constant pool index of the super class of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#setThisClass(int)">setThisClass</A></B>(int&nbsp;thisClass)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Set the constant pool index of this class.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#unregisterConstantPoolEntry(int)">unregisterConstantPoolEntry</A></B>(int&nbsp;index)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Unregister the constant pool entry at a given index, so that it can
 no longer be found through the <tt>getConstantPoolIndex</tt> method.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#write(java.io.DataOutput)">write</A></B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/DataOutput.html" title="class or interface in java.io">DataOutput</A>&nbsp;in)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write this structure to the given <tt>DataOutput</tt>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../../org/gjt/jclasslib/structures/ClassFile.html#writeAttributes(java.io.DataOutput)">writeAttributes</A></B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/DataOutput.html" title="class or interface in java.io">DataOutput</A>&nbsp;out)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Write the attributes of this structure to the given <tt>DataOutput</tt>.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.gjt.jclasslib.structures.AbstractStructureWithAttributes"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class org.gjt.jclasslib.structures.<A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html" title="class in org.gjt.jclasslib.structures">AbstractStructureWithAttributes</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html#findAttribute(java.lang.Class)">findAttribute</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html#getAttributes()">getAttributes</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html#getTotalAttributesLength()">getTotalAttributesLength</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html#setAttributes(org.gjt.jclasslib.structures.AttributeInfo[])">setAttributes</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_org.gjt.jclasslib.structures.AbstractStructure"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class org.gjt.jclasslib.structures.<A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html" title="class in org.gjt.jclasslib.structures">AbstractStructure</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#debug(java.lang.String)">debug</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#getClassFile()">getClassFile</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#getDebug()">getDebug</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#getLength(java.lang.Object)">getLength</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#printAccessFlags(int)">printAccessFlags</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#printAccessFlagsVerbose(int[], java.lang.String[], int)">printAccessFlagsVerbose</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#printBytes(int)">printBytes</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#setClassFile(org.gjt.jclasslib.structures.ClassFile)">setClassFile</A>, <A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#setDebug(boolean)">setDebug</A></CODE></TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TD><B>Methods inherited from class java.lang.<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html" title="class or interface in java.lang">Object</A></B></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html#clone()" title="class or interface in java.lang">clone</A>, <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html#notify()" title="class or interface in java.lang">notify</A>, <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html#toString()" title="class or interface in java.lang">toString</A>, <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html#wait()" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Object.html#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Field Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="SYSTEM_PROPERTY_SKIP_CONSTANT_POOL"><!-- --></A><H3>
SYSTEM_PROPERTY_SKIP_CONSTANT_POOL</H3>
<PRE>
public static final <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A> <B>SYSTEM_PROPERTY_SKIP_CONSTANT_POOL</B></PRE>
<DL>
<DD>Set this JVM System property to true to skip reading of constant pool
 entries. This is not advisable, since most sunsequent operations on the
 class file structure will fail.
<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../../../../constant-values.html#org.gjt.jclasslib.structures.ClassFile.SYSTEM_PROPERTY_SKIP_CONSTANT_POOL">Constant Field Values</A></DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="ClassFile()"><!-- --></A><H3>
ClassFile</H3>
<PRE>
public <B>ClassFile</B>()</PRE>
<DL>
<DD>Constructor.
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TD COLSPAN=1><FONT SIZE="+2">
<B>Method Detail</B></FONT></TD>
</TR>
</TABLE>

<A NAME="getMinorVersion()"><!-- --></A><H3>
getMinorVersion</H3>
<PRE>
public int <B>getMinorVersion</B>()</PRE>
<DL>
<DD>Get the minor version of the class file format.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the minor version</DL>
</DD>
</DL>
<HR>

<A NAME="setMinorVersion(int)"><!-- --></A><H3>
setMinorVersion</H3>
<PRE>
public void <B>setMinorVersion</B>(int&nbsp;minorVersion)</PRE>
<DL>
<DD>Set the minor version of the class file format.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>minorVersion</CODE> - the minor version</DL>
</DD>
</DL>
<HR>

<A NAME="getMajorVersion()"><!-- --></A><H3>
getMajorVersion</H3>
<PRE>
public int <B>getMajorVersion</B>()</PRE>
<DL>
<DD>Get the major version of the class file format.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the major version</DL>
</DD>
</DL>
<HR>

<A NAME="setMajorVersion(int)"><!-- --></A><H3>
setMajorVersion</H3>
<PRE>
public void <B>setMajorVersion</B>(int&nbsp;majorVersion)</PRE>
<DL>
<DD>Set the major version of the class file format.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>majorVersion</CODE> - the major version</DL>
</DD>
</DL>
<HR>

<A NAME="getConstantPool()"><!-- --></A><H3>
getConstantPool</H3>
<PRE>
public <A HREF="../../../../org/gjt/jclasslib/structures/CPInfo.html" title="class in org.gjt.jclasslib.structures">CPInfo</A>[] <B>getConstantPool</B>()</PRE>
<DL>
<DD>Get the array with all constant pool entries.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the array</DL>
</DD>
</DL>
<HR>

<A NAME="getConstantPoolIndex(org.gjt.jclasslib.structures.CPInfo)"><!-- --></A><H3>
getConstantPoolIndex</H3>
<PRE>
public int <B>getConstantPoolIndex</B>(<A HREF="../../../../org/gjt/jclasslib/structures/CPInfo.html" title="class in org.gjt.jclasslib.structures">CPInfo</A>&nbsp;cpInfo)</PRE>
<DL>
<DD>Get the index of an equivalent constant pool entry.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>cpInfo</CODE> - the constant pool entry
<DT><B>Returns:</B><DD>the index, -1 if no equivalent constant pool entry can be found</DL>
</DD>
</DL>
<HR>

<A NAME="setConstantPool(org.gjt.jclasslib.structures.CPInfo[])"><!-- --></A><H3>
setConstantPool</H3>
<PRE>
public void <B>setConstantPool</B>(<A HREF="../../../../org/gjt/jclasslib/structures/CPInfo.html" title="class in org.gjt.jclasslib.structures">CPInfo</A>[]&nbsp;constantPool)</PRE>
<DL>
<DD>Set the array with all constant pool entries. An internal hash map
 will need to be recalulated. If you add to the end of the constant
 pool, use <tt>enlargeConstantPool</tt>.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>constantPool</CODE> - the array</DL>
</DD>
</DL>
<HR>

<A NAME="enlargeConstantPool(org.gjt.jclasslib.structures.CPInfo[])"><!-- --></A><H3>
enlargeConstantPool</H3>
<PRE>
public void <B>enlargeConstantPool</B>(<A HREF="../../../../org/gjt/jclasslib/structures/CPInfo.html" title="class in org.gjt.jclasslib.structures">CPInfo</A>[]&nbsp;enlargedConstantPool)</PRE>
<DL>
<DD>Set the array with all constant pool entries where the new array
 of constant pool entries starts with the old constant pool. If
 you delete entries, use <tt>setConstantPool</tt>.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>enlargedConstantPool</CODE> - the array</DL>
</DD>
</DL>
<HR>

<A NAME="registerConstantPoolEntry(int)"><!-- --></A><H3>
registerConstantPoolEntry</H3>
<PRE>
public void <B>registerConstantPoolEntry</B>(int&nbsp;index)</PRE>
<DL>
<DD>Register the constant pool entry at a given index, so that it can
 be found through the <tt>getConstantPoolIndex</tt> method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - the index</DL>
</DD>
</DL>
<HR>

<A NAME="unregisterConstantPoolEntry(int)"><!-- --></A><H3>
unregisterConstantPoolEntry</H3>
<PRE>
public void <B>unregisterConstantPoolEntry</B>(int&nbsp;index)</PRE>
<DL>
<DD>Unregister the constant pool entry at a given index, so that it can
 no longer be found through the <tt>getConstantPoolIndex</tt> method.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - the index</DL>
</DD>
</DL>
<HR>

<A NAME="getAccessFlags()"><!-- --></A><H3>
getAccessFlags</H3>
<PRE>
public int <B>getAccessFlags</B>()</PRE>
<DL>
<DD>Get the access flags of this class.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the access flags</DL>
</DD>
</DL>
<HR>

<A NAME="setAccessFlags(int)"><!-- --></A><H3>
setAccessFlags</H3>
<PRE>
public void <B>setAccessFlags</B>(int&nbsp;accessFlags)</PRE>
<DL>
<DD>Set the access flags of this class.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>accessFlags</CODE> - the access flags</DL>
</DD>
</DL>
<HR>

<A NAME="getThisClass()"><!-- --></A><H3>
getThisClass</H3>
<PRE>
public int <B>getThisClass</B>()</PRE>
<DL>
<DD>Get the constant pool index of this class.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the index</DL>
</DD>
</DL>
<HR>

<A NAME="setThisClass(int)"><!-- --></A><H3>
setThisClass</H3>
<PRE>
public void <B>setThisClass</B>(int&nbsp;thisClass)</PRE>
<DL>
<DD>Set the constant pool index of this class.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>thisClass</CODE> - the index</DL>
</DD>
</DL>
<HR>

<A NAME="getThisClassName()"><!-- --></A><H3>
getThisClassName</H3>
<PRE>
public <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A> <B>getThisClassName</B>()
                        throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></PRE>
<DL>
<DD>Get the name of this class.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the name
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getSuperClass()"><!-- --></A><H3>
getSuperClass</H3>
<PRE>
public int <B>getSuperClass</B>()</PRE>
<DL>
<DD>Get the constant pool index of the super class of this class.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the index</DL>
</DD>
</DL>
<HR>

<A NAME="setSuperClass(int)"><!-- --></A><H3>
setSuperClass</H3>
<PRE>
public void <B>setSuperClass</B>(int&nbsp;superClass)</PRE>
<DL>
<DD>Set the constant pool index of the super class of this class.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>superClass</CODE> - the index</DL>
</DD>
</DL>
<HR>

<A NAME="getSuperClassName()"><!-- --></A><H3>
getSuperClassName</H3>
<PRE>
public <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A> <B>getSuperClassName</B>()
                         throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></PRE>
<DL>
<DD>Get the name of the super class.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the name
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getInterfaces()"><!-- --></A><H3>
getInterfaces</H3>
<PRE>
public int[] <B>getInterfaces</B>()</PRE>
<DL>
<DD>Get the array with the constant pool entries of all interfaces.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the array</DL>
</DD>
</DL>
<HR>

<A NAME="setInterfaces(int[])"><!-- --></A><H3>
setInterfaces</H3>
<PRE>
public void <B>setInterfaces</B>(int[]&nbsp;interfaces)</PRE>
<DL>
<DD>Set the array with the constant pool entries of all interfaces.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>interfaces</CODE> - the array</DL>
</DD>
</DL>
<HR>

<A NAME="getFields()"><!-- --></A><H3>
getFields</H3>
<PRE>
public <A HREF="../../../../org/gjt/jclasslib/structures/FieldInfo.html" title="class in org.gjt.jclasslib.structures">FieldInfo</A>[] <B>getFields</B>()</PRE>
<DL>
<DD>Get the array with the <tt>FieldInfo</tt> structures for the fields of this class.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the array</DL>
</DD>
</DL>
<HR>

<A NAME="setFields(org.gjt.jclasslib.structures.FieldInfo[])"><!-- --></A><H3>
setFields</H3>
<PRE>
public void <B>setFields</B>(<A HREF="../../../../org/gjt/jclasslib/structures/FieldInfo.html" title="class in org.gjt.jclasslib.structures">FieldInfo</A>[]&nbsp;fields)</PRE>
<DL>
<DD>Set the array with the <tt>FieldInfo</tt> structures for the fields of this class.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>fields</CODE> - the array</DL>
</DD>
</DL>
<HR>

<A NAME="getMethods()"><!-- --></A><H3>
getMethods</H3>
<PRE>
public <A HREF="../../../../org/gjt/jclasslib/structures/MethodInfo.html" title="class in org.gjt.jclasslib.structures">MethodInfo</A>[] <B>getMethods</B>()</PRE>
<DL>
<DD>Get the array with the <tt>MethodInfo</tt> structures for the methods of this class.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the array</DL>
</DD>
</DL>
<HR>

<A NAME="setMethods(org.gjt.jclasslib.structures.MethodInfo[])"><!-- --></A><H3>
setMethods</H3>
<PRE>
public void <B>setMethods</B>(<A HREF="../../../../org/gjt/jclasslib/structures/MethodInfo.html" title="class in org.gjt.jclasslib.structures">MethodInfo</A>[]&nbsp;methods)</PRE>
<DL>
<DD>Set the array with the <tt>MethodInfo</tt> structures for the methods of this class.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>methods</CODE> - the array</DL>
</DD>
</DL>
<HR>

<A NAME="getFormattedAccessFlags()"><!-- --></A><H3>
getFormattedAccessFlags</H3>
<PRE>
public <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A> <B>getFormattedAccessFlags</B>()</PRE>
<DL>
<DD>Get the the access flags of this class as a hex string.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the hex string</DL>
</DD>
</DL>
<HR>

<A NAME="getAccessFlagsVerbose()"><!-- --></A><H3>
getAccessFlagsVerbose</H3>
<PRE>
public <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A> <B>getAccessFlagsVerbose</B>()</PRE>
<DL>
<DD>Get the verbose description of the access flags of this class.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>the description</DL>
</DD>
</DL>
<HR>

<A NAME="getConstantPoolUtf8Entry(int)"><!-- --></A><H3>
getConstantPoolUtf8Entry</H3>
<PRE>
public <A HREF="../../../../org/gjt/jclasslib/structures/constants/ConstantUtf8Info.html" title="class in org.gjt.jclasslib.structures.constants">ConstantUtf8Info</A> <B>getConstantPoolUtf8Entry</B>(int&nbsp;index)
                                          throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></PRE>
<DL>
<DD>Get the <tt>ConstantUtf8Info</tt> constant pool entry at the specified index.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - the index
<DT><B>Returns:</B><DD>the constant pool entry
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE> - if the entry is not a <tt>ConstantUtf8Info</tt></DL>
</DD>
</DL>
<HR>

<A NAME="getConstantPoolEntry(int, java.lang.Class)"><!-- --></A><H3>
getConstantPoolEntry</H3>
<PRE>
public <A HREF="../../../../org/gjt/jclasslib/structures/CPInfo.html" title="class in org.gjt.jclasslib.structures">CPInfo</A> <B>getConstantPoolEntry</B>(int&nbsp;index,
                                   <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/Class.html" title="class or interface in java.lang">Class</A>&nbsp;entryClass)
                            throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></PRE>
<DL>
<DD>Get the constant pool entry at the specified index and cast it to a specified class.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - the index<DD><CODE>entryClass</CODE> - the required subtype of <tt>CPInfo</tt>
<DT><B>Returns:</B><DD>the constant pool entry
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE> - if the entry is of a different class than expected</DL>
</DD>
</DL>
<HR>

<A NAME="getConstantPoolEntryName(int)"><!-- --></A><H3>
getConstantPoolEntryName</H3>
<PRE>
public <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A> <B>getConstantPoolEntryName</B>(int&nbsp;index)
                                throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></PRE>
<DL>
<DD>Get an approximate verbose description of the content of the constant pool entry
 at the specified index.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>index</CODE> - the index
<DT><B>Returns:</B><DD>the description
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE> - if the entry is invalid</DL>
</DD>
</DL>
<HR>

<A NAME="getFieldIndex(java.lang.String, java.lang.String)"><!-- --></A><H3>
getFieldIndex</H3>
<PRE>
public int <B>getFieldIndex</B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;name,
                         <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;descriptor)
                  throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></PRE>
<DL>
<DD>Get the index of a field for given field name and signature.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the field name.<DD><CODE>descriptor</CODE> - the signature.
<DT><B>Returns:</B><DD>the index or <tt>-1</tt> if not found.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getField(java.lang.String, java.lang.String)"><!-- --></A><H3>
getField</H3>
<PRE>
public <A HREF="../../../../org/gjt/jclasslib/structures/FieldInfo.html" title="class in org.gjt.jclasslib.structures">FieldInfo</A> <B>getField</B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;name,
                          <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;descriptor)
                   throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></PRE>
<DL>
<DD>Get the <tt>FieldInfo</tt> for given field name and signature.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the field name.<DD><CODE>descriptor</CODE> - the signature.
<DT><B>Returns:</B><DD>the <tt>FieldInfo</tt> or <tt>null</tt> if not found.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getMethodIndex(java.lang.String, java.lang.String)"><!-- --></A><H3>
getMethodIndex</H3>
<PRE>
public int <B>getMethodIndex</B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;name,
                          <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;descriptor)
                   throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></PRE>
<DL>
<DD>Get the index of a method for given method name and signature.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the method name.<DD><CODE>descriptor</CODE> - the signature.
<DT><B>Returns:</B><DD>the index or <tt>-1</tt> if not found.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getMethod(java.lang.String, java.lang.String)"><!-- --></A><H3>
getMethod</H3>
<PRE>
public <A HREF="../../../../org/gjt/jclasslib/structures/MethodInfo.html" title="class in org.gjt.jclasslib.structures">MethodInfo</A> <B>getMethod</B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;name,
                            <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A>&nbsp;descriptor)
                     throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></PRE>
<DL>
<DD>Get the <tt>MethodInfo</tt> for given method name and signature.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - the method name.<DD><CODE>descriptor</CODE> - the signature.
<DT><B>Returns:</B><DD>the <tt>MethodInfo</tt> or <tt>null</tt> if not found.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE></DL>
</DD>
</DL>
<HR>

<A NAME="read(java.io.DataInput)"><!-- --></A><H3>
read</H3>
<PRE>
public void <B>read</B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/DataInput.html" title="class or interface in java.io">DataInput</A>&nbsp;in)
          throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A>,
                 <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/IOException.html" title="class or interface in java.io">IOException</A></PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html" title="class in org.gjt.jclasslib.structures">AbstractStructure</A></CODE></B></DD>
<DD>Read this structure from the given <tt>DataInput</tt>. <p>
 <p/>
 Excpects <tt>DataInput</tt> to be in JVM class file format and just
 before a structure of this kind. No look ahead parsing since
 the class file format is deterministic.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#read(java.io.DataInput)">read</A></CODE> in class <CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html" title="class in org.gjt.jclasslib.structures">AbstractStructure</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>in</CODE> - the <tt>DataInput</tt> from which to read
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/IOException.html" title="class or interface in java.io">IOException</A></CODE> - if an exception occurs with the <tt>DataInput</tt>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE> - if the byte code is invalid</DL>
</DD>
</DL>
<HR>

<A NAME="write(java.io.DataOutput)"><!-- --></A><H3>
write</H3>
<PRE>
public void <B>write</B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/DataOutput.html" title="class or interface in java.io">DataOutput</A>&nbsp;in)
           throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A>,
                  <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/IOException.html" title="class or interface in java.io">IOException</A></PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html" title="class in org.gjt.jclasslib.structures">AbstractStructure</A></CODE></B></DD>
<DD>Write this structure to the given <tt>DataOutput</tt>. <p>
 <p/>
 The written bytes are in JVM class file format.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#write(java.io.DataOutput)">write</A></CODE> in class <CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html" title="class in org.gjt.jclasslib.structures">AbstractStructure</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>in</CODE> - the <tt>DataOutput</tt> to which to write
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/IOException.html" title="class or interface in java.io">IOException</A></CODE> - if an exception occurs with the <tt>DataOutput</tt>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE> - if the structure is internally inconsistent</DL>
</DD>
</DL>
<HR>

<A NAME="readAttributes(java.io.DataInput)"><!-- --></A><H3>
readAttributes</H3>
<PRE>
protected void <B>readAttributes</B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/DataInput.html" title="class or interface in java.io">DataInput</A>&nbsp;in)
                       throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A>,
                              <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/IOException.html" title="class or interface in java.io">IOException</A></PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html" title="class in org.gjt.jclasslib.structures">AbstractStructureWithAttributes</A></CODE></B></DD>
<DD>Read the attributes of this structure from the given <tt>DataInput</tt>. <p>

        Excpects <tt>DataInput</tt> to be in JVM class file format and just
        before an attribute length field.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html#readAttributes(java.io.DataInput)">readAttributes</A></CODE> in class <CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html" title="class in org.gjt.jclasslib.structures">AbstractStructureWithAttributes</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>in</CODE> - the <tt>DataInput</tt> from which to read
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/IOException.html" title="class or interface in java.io">IOException</A></CODE> - if an exception occurs with the <tt>DataInput</tt>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE> - if the byte code is invalid</DL>
</DD>
</DL>
<HR>

<A NAME="writeAttributes(java.io.DataOutput)"><!-- --></A><H3>
writeAttributes</H3>
<PRE>
protected void <B>writeAttributes</B>(<A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/DataOutput.html" title="class or interface in java.io">DataOutput</A>&nbsp;out)
                        throws <A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A>,
                               <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/IOException.html" title="class or interface in java.io">IOException</A></PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html" title="class in org.gjt.jclasslib.structures">AbstractStructureWithAttributes</A></CODE></B></DD>
<DD>Write the attributes of this structure to the given <tt>DataOutput</tt>. <p>

        The written bytes are in JVM class file format.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html#writeAttributes(java.io.DataOutput)">writeAttributes</A></CODE> in class <CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructureWithAttributes.html" title="class in org.gjt.jclasslib.structures">AbstractStructureWithAttributes</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>out</CODE> - the <tt>DataOutput</tt> to which to write
<DT><B>Throws:</B>
<DD><CODE><A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/io/IOException.html" title="class or interface in java.io">IOException</A></CODE> - if an exception occurs with the <tt>DataOutput</tt>
<DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/InvalidByteCodeException.html" title="class in org.gjt.jclasslib.structures">InvalidByteCodeException</A></CODE> - if the structure is internally inconsistent</DL>
</DD>
</DL>
<HR>

<A NAME="printAccessFlagsVerbose(int)"><!-- --></A><H3>
printAccessFlagsVerbose</H3>
<PRE>
protected <A HREF="http://java.sun.com/products/jdk/1.4/docs/api/java/lang/String.html" title="class or interface in java.lang">String</A> <B>printAccessFlagsVerbose</B>(int&nbsp;accessFlags)</PRE>
<DL>
<DD><B>Description copied from class: <CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html" title="class in org.gjt.jclasslib.structures">AbstractStructure</A></CODE></B></DD>
<DD>Utility method for derived structures. Print an access flag as
 a space separated list of verbose java access modifiers.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html#printAccessFlagsVerbose(int)">printAccessFlagsVerbose</A></CODE> in class <CODE><A HREF="../../../../org/gjt/jclasslib/structures/AbstractStructure.html" title="class in org.gjt.jclasslib.structures">AbstractStructure</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>accessFlags</CODE> - the unsigned short value to print as a hex string
<DT><B>Returns:</B><DD>the hex string</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=3 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
<b><a target='_blank' href='http://www.ej-technologies.com' >ej-technologies</a></b></EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../../org/gjt/jclasslib/structures/AttributeInfo.html" title="class in org.gjt.jclasslib.structures"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../../org/gjt/jclasslib/structures/ClassMember.html" title="class in org.gjt.jclasslib.structures"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../../index.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="ClassFile.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>

</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
